{"ast":null,"code":"var _jsxFileName = \"/Users/yoannlabbe/Projet/my-app/PLANT-FLOWER-FRONT/src/Common/FormField.jsx\",\n    _s = $RefreshSig$();\n\n// Code utilser dans pour la partie Connexion\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormField(_ref) {\n  _s();\n\n  let {\n    name,\n    InputProps,\n    ...otherProps\n  } = _ref;\n  const {\n    setFieldTouched\n    /*l'utilisateur a touché dans le champs*/\n    ,\n    setFieldValue,\n    //équivalent setForm (..., e.target.value...)\n    values,\n    //toutes valeurs du formulaire\n    errors,\n    touched //liste toutes les champs ont été touché\n\n  } = useFormikContext();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      onChange: e => setFieldValue(name, e.target.value),\n      value: values[name],\n      onBlur: () => setFieldTouched(name) //onBlur detecte le moment quand on rentre et ressort d'un champs\n      ,\n      ...otherProps,\n      InputProps: InputProps //mettre icon\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), errors[name] && touched[name] && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FormField, \"nPPDpDjCkytEGGaCIhYs7aQWJZo=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = FormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"sources":["/Users/yoannlabbe/Projet/my-app/PLANT-FLOWER-FRONT/src/Common/FormField.jsx"],"names":["React","useFormikContext","TextField","FormField","name","InputProps","otherProps","setFieldTouched","setFieldValue","values","errors","touched","e","target","value"],"mappings":";;;AAAA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAGA,eAAe,SAASC,SAAT,OAAwD;AAAA;;AAAA,MAArC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoB,OAAGC;AAAvB,GAAqC;AAErE,QAAM;AACJC,IAAAA;AAAgB;AADZ;AAEJC,IAAAA,aAFI;AAEW;AACfC,IAAAA,MAHI;AAGI;AACRC,IAAAA,MAJI;AAKJC,IAAAA,OALI,CAKK;;AALL,MAMFV,gBAAgB,EANpB;AAQA,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAGW,CAAD,IAAOJ,aAAa,CAACJ,IAAD,EAAOQ,CAAC,CAACC,MAAF,CAASC,KAAhB,CADhC;AAEE,MAAA,KAAK,EAAEL,MAAM,CAACL,IAAD,CAFf;AAGE,MAAA,MAAM,EAAE,MAAMG,eAAe,CAACH,IAAD,CAH/B,CAGuC;AAHvC;AAAA,SAIME,UAJN;AAKE,MAAA,UAAU,EAAED,UALd,CAK0B;;AAL1B;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,EAUGK,MAAM,CAACN,IAAD,CAAN,IAAgBO,OAAO,CAACP,IAAD,CAAvB,iBAAiC;AAAA,gBAAIM,MAAM,CAACN,IAAD;AAAV;AAAA;AAAA;AAAA;AAAA,YAVpC;AAAA,kBADF;AAcD;;GAxBuBD,S;UAQlBF,gB;;;KARkBE,S","sourcesContent":["// Code utilser dans pour la partie Connexion\r\n\r\n\r\nimport React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nexport default function FormField({ name, InputProps, ...otherProps }) {\r\n  \r\n  const {\r\n    setFieldTouched /*l'utilisateur a touché dans le champs*/,\r\n    setFieldValue, //équivalent setForm (..., e.target.value...)\r\n    values, //toutes valeurs du formulaire\r\n    errors,\r\n    touched, //liste toutes les champs ont été touché\r\n  } = useFormikContext();\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        onChange={(e) => setFieldValue(name, e.target.value)}\r\n        value={values[name]}\r\n        onBlur={() => setFieldTouched(name)} //onBlur detecte le moment quand on rentre et ressort d'un champs\r\n        {...otherProps}\r\n        InputProps={InputProps} //mettre icon\r\n      />\r\n      <br />\r\n      {/* si j'ai des erreurs et les champs ont été touchés alors affiche le nom de l'erreur */}\r\n      {errors[name] && touched[name] && <p>{errors[name]}</p>}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}