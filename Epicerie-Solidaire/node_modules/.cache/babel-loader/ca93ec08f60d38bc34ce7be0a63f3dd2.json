{"ast":null,"code":"var _jsxFileName = \"/Users/yoannlabbe/Projet/my-app/PLANT-FLOWER-FRONT/src/Connected/Connexion.jsx\",\n    _s = $RefreshSig$();\n\n// Page de connexion\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport FormFormik from \"../Common/FormFormik\";\nimport ConnectField from \"./ConnectField\";\nimport axios from \"axios\";\nimport UserContext from \"../Context/UserContext\";\nimport GoogleLogin from \"react-google-login\";\nimport ReactFacebookLogin from \"react-facebook-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid } from \"@mui/material\";\nimport { useCookies } from 'react-cookie';\nimport PopupPassword from './PopupPassword';\nimport ButtonFormik from \"../Common/ButtonFormik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  connect: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: \"auto\",\n    marginTop: \"45px\"\n  },\n  click: {\n    marginTop: \"10px\",\n    marginBottom: \"15px\"\n  },\n  button: {\n    borderRadius: \"25px\",\n    backgroundColor: \"#33FF93\",\n    color: \"black\",\n    width: \"13%\",\n    height: \"50px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    marginRight: \"10px\",\n    marginLeft: \"10px\"\n  }\n}));\nexport default function Connexion(props) {\n  _s();\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required(\"Veuillez saisir votre adresse mail\"),\n    password: Yup.string().required(\"Veuillez saisir votre mot de passe\")\n  });\n  const {\n    connectedUser,\n    setConnectedUser\n  } = useContext(UserContext);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory(); // creation d'un cookie\n\n  const [cookies, setCookies] = useCookies([\"token\"]);\n  const expiredAt = 60; // fonction pour se connecter \n\n  const handleConnection = async values => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}create/login`, values, {\n        withCredentials: true\n      });\n\n      if (response.data) {\n        // pour qu'il expire apres 1h\n        let date = new Date();\n        date.setTime(date.getTime() + expiredAt * 60 * 1000); // on va mettre le token dans le cookie pour verifier si la personne est connecté a chaque fois dans tout le site \n\n        setCookies(\"token\", response.data.token, {\n          path: \"/\",\n          expires: date\n        });\n        props.connect(true);\n        history.push(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.connect,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"100px\",\n          height: \"100px\"\n        },\n        src: \"/Logo_PF.png\",\n        alt: \"logo plant&flower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormFormik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleConnection,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectField, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectField, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonFormik, {\n        style: {\n          width: \"13%\",\n          height: \"50px\"\n        },\n        title: \"Connexion\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"2%\",\n          marginBottom: \"4%\",\n          paddingRight: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          href: \"/inscription\",\n          children: \"Pas encore inscrit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: () => setOpen(true),\n          children: \" Mot de passe oubli\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupPassword, {\n          open: open,\n          handleClose: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Connexion, \"ockuGkrFwM3nwSwUSIWA1vUJaws=\", false, function () {\n  return [useStyles, useHistory, useCookies];\n});\n\n_c = Connexion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["Button","makeStyles","React","useContext","Yup","FormFormik","ConnectField","axios","UserContext","GoogleLogin","ReactFacebookLogin","useHistory","Grid","useCookies","PopupPassword","ButtonFormik","useStyles","theme","connect","display","justifyContent","flexDirection","alignItems","margin","marginTop","click","marginBottom","button","borderRadius","backgroundColor","color","width","height","marginRight","marginLeft","Connexion","props","validationSchema","object","shape","email","string","required","password","connectedUser","setConnectedUser","classes","open","setOpen","useState","history","cookies","setCookies","expiredAt","handleConnection","values","response","post","process","env","REACT_APP_API_BASE_URL","withCredentials","data","date","Date","setTime","getTime","token","path","expires","push","error","console","log","handleClose","paddingRight"],"sources":["/Users/yoannlabbe/Projet/my-app/PLANT-FLOWER-FRONT/src/Connected/Connexion.jsx"],"sourcesContent":["// Page de connexion\r\n\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport FormFormik from \"../Common/FormFormik\";\r\nimport ConnectField from \"./ConnectField\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../Context/UserContext\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport ReactFacebookLogin from \"react-facebook-login\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useCookies } from 'react-cookie';\r\nimport PopupPassword from './PopupPassword';\r\nimport ButtonFormik from \"../Common/ButtonFormik\";\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  connect: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    margin: \"auto\",\r\n    marginTop: \"45px\",\r\n  },\r\n  click: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  button: {\r\n    borderRadius: \"25px\",\r\n    backgroundColor: \"#33FF93\",\r\n    color: \"black\",\r\n    width: \"13%\",\r\n    height: \"50px\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n}));\r\nexport default function Connexion(props) {\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Veuillez saisir votre adresse mail\"),\r\n    password: Yup.string().required(\"Veuillez saisir votre mot de passe\"),\r\n  });\r\n\r\n\r\n  const { connectedUser, setConnectedUser } = useContext(UserContext);\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  // creation d'un cookie\r\n  const [cookies, setCookies] = useCookies([\"token\"])\r\n  const expiredAt = 60\r\n  // fonction pour se connecter \r\n  const handleConnection = async (values) => {\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}create/login`, values, {\r\n        withCredentials: true,\r\n      })\r\n\r\n      if (response.data) {\r\n        // pour qu'il expire apres 1h\r\n        let date = new Date();\r\n        date.setTime(date.getTime() + (expiredAt * 60 * 1000));\r\n        // on va mettre le token dans le cookie pour verifier si la personne est connecté a chaque fois dans tout le site \r\n        setCookies(\"token\", response.data.token, { path: \"/\", expires: date })\r\n        props.connect(true)\r\n        history.push(\"/\")\r\n\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <div className={classes.connect}>\r\n\r\n      <div>\r\n        <img style={{ width: \"100px\", height: \"100px\" }} src={\"/Logo_PF.png\"} alt=\"logo plant&flower\" />\r\n      </div>\r\n      <FormFormik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleConnection}\r\n      >\r\n        <h1>Connexion</h1>\r\n        <ConnectField name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        <ConnectField name=\"password\" type=\"password\" placeholder=\"Mot de passe\" />\r\n        <ButtonFormik style={{ width: \"13%\", height: \"50px\" }} title=\"Connexion\" type=\"button\" />\r\n\r\n        {/* <h4>Ou connecte toi avec ton compte</h4>\r\n        <GoogleLogin />\r\n        <ReactFacebookLogin /> */}\r\n        <Grid container spacing={2} style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"2%\", marginBottom: \"4%\", paddingRight: 5 }}>\r\n          <Button className={classes.button} href=\"/inscription\">Pas encore inscrit</Button>\r\n          <Button className={classes.button} onClick={() => setOpen(true)}> Mot de passe oublié</Button>\r\n          <PopupPassword open={open} handleClose={handleClose} />\r\n\r\n        </Grid>\r\n      </FormFormik>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}